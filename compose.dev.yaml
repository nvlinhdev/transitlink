services:
  transitlink-db:
    image: postgres:17.5-alpine
    container_name: transitlink-db
    environment:
      POSTGRES_DB: ${TRANSITLINK_DB_NAME}
      POSTGRES_USER: ${TRANSITLINK_DB_USER}
      POSTGRES_PASSWORD: ${TRANSITLINK_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - transitlink-data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TRANSITLINK_DB_USER} -d ${TRANSITLINK_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-db:
    image: postgres:17.5-alpine
    container_name: keycloak-db
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - keycloak-data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER} -d ${KEYCLOAK_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4-alpine
    container_name: redis
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: bitnami/keycloak:26.3.1-debian-12-r2
    container_name: keycloak
    environment:
      KEYCLOAK_DATABASE_HOST: keycloak-db
      KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DB_NAME}
      KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DB_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_HOSTNAME: localhost
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
    ports:
      - "8080:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/health/ready || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  transitlink-app:
    build:
        context: .
        dockerfile: Dockerfile.dev
    container_name: transitlink-app
    environment:
      TRANSITLINK_DB_HOST: transitlink-db
      TRANSITLINK_DB_PORT: 5432
      TRANSITLINK_DB_NAME: ${TRANSITLINK_DB_NAME}
      TRANSITLINK_DB_USER: ${TRANSITLINK_DB_USER}
      TRANSITLINK_DB_PASSWORD: ${TRANSITLINK_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ISSUER_URI: http://keycloak:8080/realms/${KEYCLOAK_REALM}
      JWK_SET_URI: http://keycloak:8080/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
    ports:
      - "8888:8888"
    volumes:
      - ./build/libs/transitlink-1.0.0-SNAPSHOT.jar:/app/app.jar
    depends_on:
      transitlink-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  transitlink-data:
    driver: local
  keycloak-data:
    driver: local
  redis-data:
    driver: local