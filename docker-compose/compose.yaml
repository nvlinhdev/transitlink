networks:
  gateway:
    driver: bridge
    name: gateway_network
  app:
    driver: bridge
    name: app_network
  database:
    driver: bridge
    name: database_network

volumes:
  redis-data:
  keycloak-data:
  transitlink-data:
  letsencrypt_certs:

services:
  redis:
    image: bitnami/redis:8.0.3-debian-12-r2
    container_name: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/bitnami/redis/data
    networks:
      - app
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - stag
      - prod

  keycloak-db:
    image: bitnami/postgresql:17.5.0-debian-12-r20
    container_name: keycloak-db
    environment:
      POSTGRESQL_DATABASE: ${KEYCLOAK_DB_NAME}
      POSTGRESQL_USERNAME: ${KEYCLOAK_DB_USER}
      POSTGRESQL_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak-data:/bitnami/postgresql
    networks:
      - database
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER} -d ${KEYCLOAK_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - stag
      - prod

  keycloak:
    image: bitnami/keycloak:26.3.1-debian-12-r2
    container_name: keycloak
    environment:
      KEYCLOAK_DATABASE_HOST: keycloak-db
      KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DB_NAME}
      KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DB_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
    depends_on:
      keycloak-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - database
      - app
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/health/ready || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    profiles:
      - dev
      - stag
      - prod

  transitlink-db:
    image: bitnami/postgresql:17.5.0-debian-12-r20
    container_name: transitlink-db
    environment:
      POSTGRESQL_DATABASE: ${TRANSITLINK_DB_NAME}
      POSTGRESQL_USERNAME: ${TRANSITLINK_DB_USER}
      POSTGRESQL_PASSWORD: ${TRANSITLINK_DB_PASSWORD}
    volumes:
      - transitlink-data:/bitnami/postgresql
    networks:
      - database
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${TRANSITLINK_DB_USER} -d ${TRANSITLINK_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - stag
      - prod

  transitlink:
    image: linhnvdev/transitlink:${TRANSITLINK_VERSION}
    container_name: transitlink
    environment:
      TRANSITLINK_DB_HOST: transitlink-db
      TRANSITLINK_DB_PORT: 5432
      TRANSITLINK_DB_NAME: ${TRANSITLINK_DB_NAME}
      TRANSITLINK_DB_USER: ${TRANSITLINK_DB_USER}
      TRANSITLINK_DB_PASSWORD: ${TRANSITLINK_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ISSUER_URI: http://${KEYCLOAK_DOMAIN}/realms/${KEYCLOAK_REALM}
      JWK_SET_URI: http://${KEYCLOAK_DOMAIN}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
      TRANSITLINK_DOMAIN: ${TRANSITLINK_DOMAIN}
    volumes:
      - ./transitlink/storage-data:/app/storage
    depends_on:
      transitlink-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - database
      - app
      - gateway
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8888/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - dev
      - stag
      - prod

  nginx:
    image: bitnami/nginx:1.29.0-debian-12-r4
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/server_blocks:/opt/bitnami/nginx/conf/server_blocks/
      - letsencrypt_certs:/certs
    depends_on:
      keycloak:
        condition: service_healthy
      transitlink:
        condition: service_healthy
    networks:
      gateway:
        aliases:
          - ${KEYCLOAK_DOMAIN}
      app:
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nginx -t"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - dev
      - stag
      - prod

  certbot:
    image: certbot/dns-cloudflare
    container_name: certbot
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    networks:
      - gateway
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
    depends_on:
      nginx:
        condition: service_healthy
    profiles:
      - prod