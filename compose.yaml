services:
  db_transitlink:
    image: bitnami/postgresql:17.5.0-debian-12-r16
    container_name: db_transitlink
    environment:
      - POSTGRESQL_USERNAME=${TRANSITLINK_DB_USER}
      - POSTGRESQL_PASSWORD=${TRANSITLINK_DB_PASSWORD}
      - POSTGRESQL_DATABASE=${TRANSITLINK_DB_NAME}
    ports:
      - "${TRANSITLINK_DB_PORT}:5432"
    volumes:
      - transitlink_data:/bitnami/postgresql
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TRANSITLINK_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_keycloak:
    image: bitnami/postgresql:17.5.0-debian-12-r16
    container_name: db_keycloak
    environment:
      - POSTGRESQL_USERNAME=${KEYCLOAK_DB_USER}
      - POSTGRESQL_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRESQL_DATABASE=${KEYCLOAK_DB_NAME}
    ports:
      - "${KEYCLOAK_DB_PORT}:5432"
    volumes:
      - keycloak_data:/bitnami/postgresql
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: bitnami/redis:7.4.2-debian-12-r11
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/bitnami/redis
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: bitnami/keycloak:26.3.0-debian-12-r0
    container_name: keycloak
    environment:
      - KEYCLOAK_DATABASE_VENDOR=postgresql
      - KEYCLOAK_DATABASE_HOST=db_keycloak
      - KEYCLOAK_DATABASE_PORT_NUMBER=5432
      - KEYCLOAK_DATABASE_NAME=${KEYCLOAK_DB_NAME}
      - KEYCLOAK_DATABASE_USER=${KEYCLOAK_DB_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KEYCLOAK_ADMIN_USER=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_ENABLE_HEALTH_ENDPOINTS=true
    ports:
      - "${KEYCLOAK_ADMIN_PORT}:8080"
    depends_on:
      db_keycloak:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/health/ready" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

networks:
  backend:
    driver: bridge

volumes:
  transitlink_data:
    driver: local
  keycloak_data:
    driver: local
  redis_data:
    driver: local